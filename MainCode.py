from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, callback_query
import time
import logging
import asyncio
from aiogram.dispatcher.filters import Text
import random as r

API_TOKEN = '6773333833:AAFsaNhdm_8RvFxcmXoPx0tJ7jH0zGlo1rQ'
text_alert = '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ'

bot = Bot(token = API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text='–ü—Ä–∏–≤–µ—Ç–∏–∫–∏!üòä'),
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb)
    await message.answer('üòÅ–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –º–æ—ë–º –±–æ—Ç–µ!üòÅ', reply_markup=keyboard)

@dp.message_handler(text='–ü—Ä–∏–≤–µ—Ç–∏–∫–∏!üòä')
async def send_welcome(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text='–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ –°–æ–∑–≤–µ–∑–¥–∏–∏'),
            types.KeyboardButton(text='–°–æ–∑–≤–µ–∑–¥–∏–µ –º–∞—Ä–∫–µ—Ç'),
            types.KeyboardButton(text='–°—Å—ã–ª–∫–∏ –Ω–∞ –°–æ–∑–≤–µ–∑–¥–∏–µ'),
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=keyboard)

urlkb = InlineKeyboardMarkup(row_width=1)
urlButton = InlineKeyboardButton(text='–°–æ–∑–≤–µ–∑–¥–∏–µ –ú–∞—Ä–∫–µ—Ç', 
url ='https://vk.com/valiantdemon2608')
urlkb.add(urlButton)

@dp.message_handler(text="–°–æ–∑–≤–µ–∑–¥–∏–µ –º–∞—Ä–∫–µ—Ç")
async def url_market(message: types.message):
    await message.answer('–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:',reply_markup = urlkb)

urlkb_SocialMedia = InlineKeyboardMarkup(row_width=1)
urlButtonSocial = InlineKeyboardButton(text = '–°–∞–π—Ç –°–æ–∑–≤–µ–∑–¥–∏—è')

dp.message_handler(text = '–°—Å—ã–ª–∫–∏ –Ω–∞ –°–æ–∑–≤–µ–∑–¥–∏–µ')
async def url_market(message: types.message):
    await message.answer('–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:',reply_markup = urlkb)

@dp.message_handler(text="–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ –°–æ–∑–≤–µ–∑–¥–∏–∏")
async def facts(message: types.message):
    number = r.randint(0,10)
    if number == 1:
        await message.reply('–ù–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –¥—Ä—É–∂–∏–Ω—ã , –µ—Å—Ç—å –±–æ–ª—å—à–æ–π —Å—Ç—É–ª , –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç—Ä–æ–∏–ª–∞ —Å–µ–º—å—è ,–æ–¥–Ω–∞–∂–¥—ã –ø—Ä–æ–∂–∏–≤–∞—é—â–∞—è –≤ "–°–æ–∑–≤–µ–∑–¥–∏–∏". –í—Å–µ –∫—Ç–æ —Ö–æ—á–µ—Ç –º–æ–∂–µ—Ç –∑–∞–≥–∞–¥–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Å–µ–º—å–µ–π, –≤–æ–∑–ª–µ –Ω–µ–≥–æ.')
    if number == 2:
        await message.reply('–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤ " –°–æ–∑–≤–µ–∑–¥–∏–∏" –±—ã–ª–∏ —Ç–æ–ª—å–∫–æ –≤–µ—Å–µ–Ω–Ω–∏–µ –∏ –ª–µ—Ç–Ω–∏–µ —Å–º–µ–Ω—ã')
    if number == 3:
        await message.reply('–ù–∞ –≥–ª–∞–≤–Ω–æ–º –∫–æ—Ä–ø—É—Å–µ –µ—Å—Ç—å –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞ –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–æ —Ç—Ä–∞–¥–∏—Ü–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é—Ç—Å—è, –∏ –∑–∞–≥–∞–¥—ã–≤–∞—é—Ç –∂–µ–ª–∞–Ω–∏—è!')
    if number == 4:
        await message.reply('–£ "–°–æ–∑–≤–µ–∑–¥–∏—è" –µ—Å—Ç—å —Å–≤–æ–π –º–∞—Å–∫–æ—Ç –ó–≤–µ–∑–¥—É–Ω')
    if number == 5:
        await message.reply('kekek')
    if number == 6:
        await message.reply('kekek')
    if number == 7:
        await message.reply('kekek')
    if number == 8:
        await message.reply('kekek')
    if number == 9:
        await message.reply('kekek')
    if number == 10:
        await message.reply('kekek')

@dp.message_handler(commands=["alert"])
async def start_alert(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    user_full_name = message.from_user.full_name
    logging.info(f'{user_id} {user_full_name} {time.asctime}')
    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {user_full_name}')
    for i in range(7):
        await asyncio.sleep(60*60*24)
        await bot.send_message (user_id,text_alert.format(user_name))

@dp.message_handler(commands=['creator'])
async def send_creator(message: types.message):
    await message.answer('–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å: –¢–∞—à–ª—ã–∫–æ–≤ –î–º–∏—Ç—Ä–∏–π –†–æ–º–∞–Ω–æ–≤–∏—á –∏ –ü–∏—á–∫–æ –ì–µ–æ—Ä–≥–∏–π –ü–∞–≤–ª–æ–≤–∏—á')
#–°–¥–µ–ª–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ —Å–æ—Ü—Å–µ—Ç–∏ —Å–æ–∑–≤–µ–∑–¥–∏—è 
#–ú–µ—Å—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã –≤–∫ —Å–æ–∑–≤–µ–∑–¥–∏–µ
#–°—Ç–∏–∫–µ—Ä—ã —Å —Å–æ–∑–≤–µ–∑–¥–∏–µ–º
#–°–¥–µ–ª–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ —Å –º–µ—Å—Ç–∞–º–∏ –¥–ª—è –∑–∞–≥–∞–¥—ã–≤–∞–Ω–∏—è –∂–µ–ª–∞–Ω–∏–π: –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–∫–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ—Ç–∏ –∑–∞–≥–∞–¥—ã–≤–∞—é—Ç –∂–µ–ª–∞–Ω–∏—è –∏ —Å–∫–∏–¥—ã–≤–∞—Ç—å –∏—Ö –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É —Å–æ–∑–≤–µ–∑–¥–∏—è
#–®—Ç—É–∫–∞ —á—Ç–æ –±—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —Ç–≥
if __name__ =='__main__':
    executor.start_polling(dp)
